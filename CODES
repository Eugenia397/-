блочная (корзинная) сортировка
def bucket_sort(arr):
    # Определяем максимальное значение для расчёта количества бакетов
    max_value = max(arr)
    
    # Количество бакетов выбирается исходя из длины массива (можно настраивать)
    num_buckets = len(arr)
    
    # Создаем список пустых списков (каждый пустой список является бакетом)
    buckets_list = []
    for i in range(num_buckets):
        buckets_list.append([])
        
    # Распределяем элементы массива по соответствующим бакетам
    for j in arr:
        index_b = int((j / max_value) * (num_buckets - 1))
        buckets_list[index_b].append(j)
    
    # Сортируем каждый бакет (используем встроенную сортировку Python)
    for i in range(len(buckets_list)):
        buckets_list[i].sort()
    
    # Объединяем отсортированные бакеты в итоговый отсортированный массив
    final_output = []
    for x in buckets_list:
        final_output.extend(x)
    
    return final_output


# Пример запуска программы
if __name__ == "__main__":
    input_array = [0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434]
    print("Исходный массив:", input_array)
    sorted_array = bucket_sort(input_array)
    print("Отсортированный массив:", sorted_array)

Результат Выполнения Кодa:
Предположим, вводим следующий массив чисел:
Исходный массив: [0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434]
Отсортированный массив: [0.1234, 0.3434, 0.565, 0.656, 0.665, 0.897]





блинная сортировка
